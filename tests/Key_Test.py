import unittest

from src.Field import GF
from src.Key import expand_128, expand_192, expand_256


# TODO comment code
# TODO create docstrings

# Tests the key expansion algorithm against
# Known inputs / outputs
# Test vectors from https://www.samiam.org/key-schedule.html


class TestExpand128(unittest.TestCase):
    def test_inputs_1(self):
        inputs = [GF(0) for _ in range(16)]
        expected = [GF(i) for i in
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 99, 99, 99, 98, 99, 99, 99, 98, 99, 99, 99, 98,
                     99, 99, 99,
                     155, 152, 152, 201, 249, 251, 251, 170, 155, 152, 152, 201, 249, 251, 251, 170, 144, 151, 52, 80,
                     105, 108,
                     207, 250, 242, 244, 87, 51, 11, 15, 172, 153, 238, 6, 218, 123, 135, 106, 21, 129, 117, 158, 66,
                     178, 126, 145,
                     238, 43, 127, 46, 43, 136, 248, 68, 62, 9, 141, 218, 124, 187, 243, 75, 146, 144, 236, 97, 75, 133,
                     20, 37,
                     117, 140, 153, 255, 9, 55, 106, 180, 155, 167, 33, 117, 23, 135, 53, 80, 98, 11, 172, 175, 107, 60,
                     198, 27,
                     240, 155, 14, 249, 3, 51, 59, 169, 97, 56, 151, 6, 10, 4, 81, 29, 250, 159, 177, 212, 216, 226,
                     138, 125, 185,
                     218, 29, 123, 179, 222, 76, 102, 73, 65, 180, 239, 91, 203, 62, 146, 226, 17, 35, 233, 81, 207,
                     111, 143, 24,
                     142]]

        test_param = expand_128(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)

    def test_inputs_2(self):
        inputs = [GF(0xff) for _ in range(16)]
        expected = [GF(i) for i in
                    [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 232, 233, 233, 233,
                     23, 22, 22, 22, 232, 233, 233, 233, 23, 22, 22, 22, 173, 174, 174, 25, 186, 184, 184, 15, 82, 81,
                     81, 230, 69, 71, 71, 240, 9, 14, 34, 119, 179, 182, 154, 120, 225, 231, 203, 158, 164, 160, 140,
                     110, 225, 106, 189, 62, 82, 220, 39, 70, 179, 59, 236, 216, 23, 155, 96, 182, 229, 186, 243, 206,
                     183, 102, 212, 136, 4, 93, 56, 80, 19, 198, 88, 230, 113, 208, 125, 179, 198, 182, 169, 59, 194,
                     235, 145, 107, 209, 45, 201, 141, 233, 13, 32, 141, 47, 187, 137, 182, 237, 80, 24, 221, 60, 125,
                     209, 80, 150, 51, 115, 102, 185, 136, 250, 208, 84, 216, 226, 13, 104, 165, 51, 93, 139, 240, 63,
                     35, 50, 120, 197, 243, 102, 160, 39, 254, 14, 5, 20, 163, 214, 10, 53, 136, 228, 114, 240, 123,
                     130, 210, 215, 133, 140, 215, 195, 38]]

        test_param = expand_128(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)

    def test_inputs_3(self):
        inputs = [GF(_) for _ in range(16)]
        expected = [GF(i) for i in
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 214, 170, 116, 253, 210, 175, 114, 250, 218,
                     166, 120, 241, 214, 171, 118, 254, 182, 146, 207, 11, 100, 61, 189, 241, 190, 155, 197, 0, 104, 48,
                     179, 254, 182, 255, 116, 78, 210, 194, 201, 191, 108, 89, 12, 191, 4, 105, 191, 65, 71, 247, 247,
                     188, 149, 53, 62, 3, 249, 108, 50, 188, 253, 5, 141, 253, 60, 170, 163, 232, 169, 159, 157, 235,
                     80, 243, 175, 87, 173, 246, 34, 170, 94, 57, 15, 125, 247, 166, 146, 150, 167, 85, 61, 193, 10,
                     163, 31, 107, 20, 249, 112, 26, 227, 95, 226, 140, 68, 10, 223, 77, 78, 169, 192, 38, 71, 67, 135,
                     53, 164, 28, 101, 185, 224, 22, 186, 244, 174, 191, 122, 210, 84, 153, 50, 209, 240, 133, 87, 104,
                     16, 147, 237, 156, 190, 44, 151, 78, 19, 17, 29, 127, 227, 148, 74, 23, 243, 7, 167, 139, 77, 43,
                     48, 197]]

        test_param = expand_128(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)

    def test_inputs_4(self):
        inputs = [GF(_) for _ in [105, 32, 226, 153, 165, 32, 42, 109, 101, 110, 99, 104, 105, 116, 111, 42]]
        expected = [GF(i) for i in
                    [105, 32, 226, 153, 165, 32, 42, 109, 101, 110, 99, 104, 105, 116, 111, 42, 250, 136, 7, 96, 95,
                     168, 45, 13, 58, 198, 78, 101, 83, 178, 33, 79, 207, 117, 131, 141, 144, 221, 174, 128, 170, 27,
                     224, 229, 249, 169, 193, 170, 24, 13, 47, 20, 136, 208, 129, 148, 34, 203, 97, 113, 219, 98, 160,
                     219, 186, 237, 150, 173, 50, 61, 23, 57, 16, 246, 118, 72, 203, 148, 214, 147, 136, 27, 74, 178,
                     186, 38, 93, 139, 170, 208, 43, 195, 97, 68, 253, 80, 179, 79, 25, 93, 9, 105, 68, 214, 163, 185,
                     111, 21, 194, 253, 146, 69, 167, 0, 119, 120, 174, 105, 51, 174, 13, 208, 92, 187, 207, 45, 206,
                     254, 255, 139, 204, 242, 81, 226, 255, 92, 92, 50, 163, 231, 147, 31, 109, 25, 36, 183, 24, 46,
                     117, 85, 231, 114, 41, 103, 68, 149, 186, 120, 41, 140, 174, 18, 124, 218, 219, 71, 155, 168, 242,
                     32, 223, 61, 72, 88, 246, 177]]

        test_param = expand_128(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)


class TestExpand192(unittest.TestCase):
    def test_inputs_1(self):
        inputs = [GF(0) for _ in range(24)]
        expected = [GF(i) for i in
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 99, 99, 99, 98, 99, 99,
                     99, 98, 99, 99, 99, 98, 99, 99, 99, 98, 99, 99, 99, 98, 99, 99, 99, 155, 152, 152, 201, 249, 251,
                     251, 170, 155, 152, 152, 201, 249, 251, 251, 170, 155, 152, 152, 201, 249, 251, 251, 170, 144, 151,
                     52, 80, 105, 108, 207, 250, 242, 244, 87, 51, 11, 15, 172, 153, 144, 151, 52, 80, 105, 108, 207,
                     250, 200, 29, 25, 169, 161, 113, 214, 83, 83, 133, 129, 96, 88, 138, 45, 249, 200, 29, 25, 169,
                     161, 113, 214, 83, 123, 235, 244, 155, 218, 154, 34, 200, 137, 31, 163, 168, 209, 149, 142, 81, 25,
                     136, 151, 248, 184, 249, 65, 171, 194, 104, 150, 247, 24, 242, 180, 63, 145, 237, 23, 151, 64, 120,
                     153, 198, 89, 240, 14, 62, 225, 9, 79, 149, 131, 236, 188, 15, 155, 30, 8, 48, 10, 243, 31, 167,
                     74, 139, 134, 97, 19, 123, 136, 95, 242, 114, 199, 202, 67, 42, 200, 134, 216, 52, 192, 182, 210,
                     199, 223, 17, 152, 76, 89, 112]]

        test_param = expand_192(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)

    def test_inputs_2(self):
        inputs = [GF(0xff) for _ in range(24)]
        expected = [GF(i) for i in
                    [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                     255, 255, 255, 255, 232, 233, 233, 233, 23, 22, 22, 22, 232, 233, 233, 233, 23, 22, 22, 22, 232,
                     233, 233, 233, 23, 22, 22, 22, 173, 174, 174, 25, 186, 184, 184, 15, 82, 81, 81, 230, 69, 71, 71,
                     240, 173, 174, 174, 25, 186, 184, 184, 15, 197, 194, 216, 237, 127, 122, 96, 226, 45, 43, 49, 4,
                     104, 108, 118, 244, 197, 194, 216, 237, 127, 122, 96, 226, 23, 18, 64, 63, 104, 104, 32, 221, 69,
                     67, 17, 217, 45, 47, 103, 45, 232, 237, 191, 192, 151, 151, 223, 34, 143, 140, 211, 183, 231, 228,
                     243, 106, 162, 167, 226, 179, 143, 136, 133, 158, 103, 101, 58, 94, 240, 242, 229, 124, 38, 85,
                     195, 59, 193, 177, 48, 81, 99, 22, 210, 226, 236, 158, 87, 124, 139, 251, 109, 34, 123, 9, 136, 94,
                     103, 145, 155, 26, 166, 32, 171, 75, 197, 54, 121, 169, 41, 168, 46, 213, 162, 83, 67, 247, 217,
                     90, 203, 169, 89, 142, 72, 47, 255, 174, 227, 100, 58, 152, 154, 205, 19, 48, 180, 24]]

        test_param = expand_192(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)

    def test_inputs_3(self):
        inputs = [GF(_) for _ in range(24)]
        expected = [GF(i) for i in
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 88, 70, 242,
                     249, 92, 67, 244, 254, 84, 74, 254, 245, 88, 71, 240, 250, 72, 86, 226, 233, 92, 67, 244, 254, 64,
                     249, 73, 179, 28, 186, 189, 77, 72, 240, 67, 184, 16, 183, 179, 66, 88, 225, 81, 171, 4, 162, 165,
                     85, 126, 255, 181, 65, 98, 69, 8, 12, 42, 181, 75, 180, 58, 2, 248, 246, 98, 227, 169, 93, 102, 65,
                     12, 8, 245, 1, 133, 114, 151, 68, 141, 126, 189, 241, 198, 202, 135, 243, 62, 60, 229, 16, 151, 97,
                     131, 81, 155, 105, 52, 21, 124, 158, 163, 81, 241, 224, 30, 160, 55, 42, 153, 83, 9, 22, 124, 67,
                     158, 119, 255, 18, 5, 30, 221, 126, 14, 136, 126, 47, 255, 104, 96, 143, 200, 66, 249, 220, 193,
                     84, 133, 159, 95, 35, 122, 141, 90, 61, 192, 192, 41, 82, 190, 239, 214, 58, 222, 96, 30, 120, 39,
                     188, 223, 44, 162, 35, 128, 15, 216, 174, 218, 50, 164, 151, 10, 51, 26, 120, 220, 9, 196, 24, 194,
                     113, 227, 164, 29, 93]]

        test_param = expand_192(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)


class TestExpand256(unittest.TestCase):
    def test_inputs_1(self):
        inputs = [GF(0) for _ in range(32)]
        expected = [GF(i) for i in
                    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98,
                     99, 99, 99, 98, 99, 99, 99, 98, 99, 99, 99, 98, 99, 99, 99, 170, 251, 251, 251, 170, 251, 251, 251,
                     170, 251, 251, 251, 170, 251, 251, 251, 111, 108, 108, 207, 13, 15, 15, 172, 111, 108, 108, 207,
                     13, 15, 15, 172, 125, 141, 141, 106, 215, 118, 118, 145, 125, 141, 141, 106, 215, 118, 118, 145,
                     83, 84, 237, 193, 94, 91, 226, 109, 49, 55, 142, 162, 60, 56, 129, 14, 150, 138, 129, 193, 65, 252,
                     247, 80, 60, 113, 122, 58, 235, 7, 12, 171, 158, 170, 143, 40, 192, 241, 109, 69, 241, 198, 227,
                     231, 205, 254, 98, 233, 43, 49, 43, 223, 106, 205, 220, 143, 86, 188, 166, 181, 189, 187, 170, 30,
                     100, 6, 253, 82, 164, 247, 144, 23, 85, 49, 115, 240, 152, 207, 17, 25, 109, 187, 169, 11, 7, 118,
                     117, 132, 81, 202, 211, 49, 236, 113, 121, 47, 231, 176, 232, 156, 67, 71, 120, 139, 22, 118, 11,
                     123, 142, 185, 26, 98, 116, 237, 11, 161, 115, 155, 126, 37, 34, 81, 173, 20, 206, 32, 212, 59, 16,
                     248, 10, 23, 83, 191, 114, 156, 69, 201, 121, 231, 203, 112, 99, 133]]

        test_param = expand_256(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)

    def test_inputs_2(self):
        inputs = [GF(0xff) for _ in range(32)]
        expected = [GF(i) for i in
                    [255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                     255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 232, 233, 233, 233, 23, 22, 22, 22,
                     232, 233, 233, 233, 23, 22, 22, 22, 15, 184, 184, 184, 240, 71, 71, 71, 15, 184, 184, 184, 240, 71,
                     71, 71, 74, 73, 73, 101, 93, 95, 95, 115, 181, 182, 182, 154, 162, 160, 160, 140, 53, 88, 88, 220,
                     197, 31, 31, 155, 202, 167, 167, 35, 58, 224, 224, 100, 175, 168, 10, 229, 242, 247, 85, 150, 71,
                     65, 227, 12, 229, 225, 67, 128, 236, 160, 66, 17, 41, 191, 93, 138, 227, 24, 250, 169, 217, 248,
                     26, 205, 230, 10, 183, 208, 20, 253, 226, 70, 83, 188, 1, 74, 182, 93, 66, 202, 162, 236, 110, 101,
                     139, 83, 51, 239, 104, 75, 201, 70, 177, 179, 211, 139, 155, 108, 138, 24, 143, 145, 104, 94, 220,
                     45, 105, 20, 106, 112, 43, 222, 160, 189, 159, 120, 43, 238, 172, 151, 67, 165, 101, 209, 242, 22,
                     182, 90, 252, 34, 52, 145, 115, 179, 92, 207, 175, 158, 53, 219, 197, 238, 30, 5, 6, 149, 237, 19,
                     45, 123, 65, 132, 110, 222, 36, 85, 156, 200, 146, 15, 84, 109, 66, 79, 39, 222, 30, 128, 136, 64,
                     43, 91, 77, 174, 53, 94]]

        test_param = expand_256(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)

    def test_inputs_3(self):
        inputs = [GF(_) for _ in range(32)]
        expected = [GF(i) for i in
                    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                     27, 28, 29, 30, 31, 165, 115, 194, 159, 161, 118, 196, 152, 169, 127, 206, 147, 165, 114, 192, 156,
                     22, 81, 168, 205, 2, 68, 190, 218, 26, 93, 164, 193, 6, 64, 186, 222, 174, 135, 223, 240, 15, 241,
                     27, 104, 166, 142, 213, 251, 3, 252, 21, 103, 109, 225, 241, 72, 111, 165, 79, 146, 117, 248, 235,
                     83, 115, 184, 81, 141, 198, 86, 130, 127, 201, 167, 153, 23, 111, 41, 76, 236, 108, 213, 89, 139,
                     61, 226, 58, 117, 82, 71, 117, 231, 39, 191, 158, 180, 84, 7, 207, 57, 11, 220, 144, 95, 194, 123,
                     9, 72, 173, 82, 69, 164, 193, 135, 28, 47, 69, 245, 166, 96, 23, 178, 211, 135, 48, 13, 77, 51,
                     100, 10, 130, 10, 124, 207, 247, 28, 190, 180, 254, 84, 19, 230, 187, 240, 210, 97, 167, 223, 240,
                     26, 250, 254, 231, 168, 41, 121, 215, 165, 100, 74, 179, 175, 230, 64, 37, 65, 254, 113, 155, 245,
                     0, 37, 136, 19, 187, 213, 90, 114, 28, 10, 78, 90, 102, 153, 169, 242, 79, 224, 126, 87, 43, 170,
                     205, 248, 205, 234, 36, 252, 121, 204, 191, 9, 121, 233, 55, 26, 194, 60, 109, 104, 222, 54]]

        test_param = expand_256(inputs)

        for a, b in zip(test_param, expected):
            self.assertEqual(a, b)


if __name__ == '__main__':
    Key_Suite = unittest.TestSuite()

    Key_Suite.addTest(TestExpand128())
    Key_Suite.addTest(TestExpand192())
    Key_Suite.addTest(TestExpand256())

    Key_Suite.run(unittest.TestResult())
